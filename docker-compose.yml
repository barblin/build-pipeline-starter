# docker-compose.yaml
version: '3.9'
services:
  web:
    image: docker:dind
    container_name: deployment
    restart: always
    privileged: true
    ports:
      - 8090:8080

  nexus:
    image: sonatype/nexus3
    volumes:
      - "nexus-data:/nexus-data"
    ports:
      - "8098:8081"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nexus.rule=Host(`repo.domain.io`)"
      - "traefik.http.routers.nexus.entrypoints=websecure"
      - "traefik.http.routers.nexus.tls.certresolver=leresolver"
      - "traefik.http.services.nexus.loadbalancer.server.port=9001"

  jenkins:
    restart: on-failure:10
    image: jenkins/jenkins:latest
    container_name: my-jenkins
    ports:
      - 8099:8080
    volumes:
      - ./jenkins_home:/var/jenkins_home
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.rule=Host(`build.domain.io`)"
      - "traefik.http.routers.jenkins.entrypoints=websecure"
      - "traefik.http.routers.jenkins.tls.certresolver=leresolver"
      - "traefik.http.services.jenkins.loadbalancer.server.port=9003"

  db-sonarqube:
    image: 'postgres:10.9'
    restart: always
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=dockersonar
      - POSTGRES_DB=sonarqube
      - JVM_OPTS=-Xmx500m
    volumes:
      - './postgresql_home:/var/lib/postgresql/data'

  sonarqube:
    image: sonarqube:8.9.9-community
    restart: always
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://db-sonarqube:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=dockersonar
      - JVM_OPTS=-Xmx2g
    stop_grace_period: 5m
    depends_on:
      - "db-sonarqube"
    volumes:
      - ./sonarqube_home:/opt/sonarqube/data
    ports:
      - "8100:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=Host(`sonarqube.domain.io`)"
      - "traefik.http.routers.sonarqube.entrypoints=websecure"
      - "traefik.http.routers.sonarqube.tls.certresolver=leresolver"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9002"

  gitea:
    image: gitea/gitea:latest
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: always
    networks:
      - gitea
    volumes:
      - ./gitea_home:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3000:3000"
      - "222:22"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.rule=Host(`vcs.domain.io`)"
      - "traefik.http.routers.gitea.entrypoints=websecure"
      - "traefik.http.routers.gitea.tls.certresolver=leresolver"
      - "traefik.http.services.gitea.loadbalancer.server.port=9003"

  traefik:
    image: "traefik:v2.4"
    restart: always
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.leresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.leresolver.acme.email=postmaster@domain.io"
      - "--certificatesresolvers.leresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8089:8080"
      - "9001:9001"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - default
      - public_bridge
 

volumes:
  nexus-data: {} 
networks:
  gitea:
    external: false
  default:
    external:
      name: web
  public_bridge:
    external: true
